variables:
  DOC_SERVER: doc
  DOC_CENTER: /home/xl_ci/doc_center
  IMAGE: rego.corp.nucleisys.com/software/nmsis_build
  IMAGE_TAG: gcc10.2-ubuntu20.04

default:
  tags:
    - env::docker
    - net::outside
  image: $IMAGE:$IMAGE_TAG

stages:
  - build
  - deploy

## Job for build document
build_doc:
  stage: build
  only:
    changes:
      - doc/**/**/**/*
      - .gitlab-ci.yml
  retry: 1
  artifacts:
    name: "nuclei_sdk_doc-${CI_COMMIT_SHA::8}"
    paths:
      - doc/build
    expire_in: 2 day
  before_script:
    - apt update
    - apt install -y lftp python3 make latexmk texlive-base texlive-latex-extra python3-pip
    - pip3 install -r doc/requirements.txt
  script:
    - cd doc
    - make clean
    - make all
    - make latexpdf
    - cp build/latex/*.pdf build/html/

## Job for deploy document to internal server
deploy_doc:
  stage: deploy
  when: on_success
  retry: 1
  only:
    refs:
      - master
    changes:
      - doc/**/**/**/**/*
      - .gitlab-ci.yml
  script:
    - ssh $DOC_SERVER "rm -rf $DOC_CENTER/nuclei_sdk/*"
    - ssh $DOC_SERVER "mkdir -p $DOC_CENTER/nuclei_sdk/"
    - cd doc/build
    - scp -r html $DOC_SERVER:$DOC_CENTER/nuclei_sdk
  dependencies:
    - build_doc
  tags:
    - env::native
    - host::xls01

## Job for deploy document to nuclei website
deploy_website:
  stage: deploy
  when: on_success
  retry: 1
  only:
    refs:
      - master
    changes:
      - doc/**/**/**/**/*
  script:
    - ./.ci/ftp_deploy.sh $FTPUSER $FTPPWD $FTPSERVER doc/build/html nuclei_sdk
  dependencies:
    - build_doc
  tags:
    - env::native
    - host::xls01

## Job template
.build_job_template: &build_job_template_default
  image: $IMAGE:$IMAGE_TAG
  stage: build
  before_script:
    - apt update
    - apt install -y python3 make python3-pip
    - pip3 install -r tools/scripts/requirements.txt
    - which riscv-nuclei-elf-gcc && riscv-nuclei-elf-gcc --version
    - which make && make --version
    - which python3 && python3 --version
  parallel:
    matrix:
      - DISTRO: ubuntu
        IMAGE_TAG:
          - gcc10.2-ubuntu20.04
  artifacts:
    when: always
    name: "sdk_build-log-${CI_COMMIT_SHA::8}"
    paths:
      - logs
    expire_in: 2 day

sdk_build_job_gd32vf103c_longan_nano:
  <<: *build_job_template_default
  variables:
    APPCFG: tools/scripts/nsdk_cli/configs/application.json
    HWCFG: tools/scripts/nsdk_cli/configs/gd32vf103c_longan_nano.json
    LOGDIR: logs/gd32vf103c_longan_nano
  script:
    - python3 tools/scripts/nsdk_cli/nsdk_bench.py --appcfg $APPCFG --hwcfg $HWCFG --parallel="-j" --logdir $LOGDIR

sdk_build_job_gd32vf103c_t_display:
  <<: *build_job_template_default
  variables:
    APPCFG: tools/scripts/nsdk_cli/configs/application.json
    HWCFG: tools/scripts/nsdk_cli/configs/gd32vf103c_t_display.json
    LOGDIR: logs/gd32vf103c_t_display
  script:
    - python3 tools/scripts/nsdk_cli/nsdk_bench.py --appcfg $APPCFG --hwcfg $HWCFG --parallel="-j" --logdir $LOGDIR

sdk_build_job_gd32vf103v_eval:
  <<: *build_job_template_default
  variables:
    APPCFG: tools/scripts/nsdk_cli/configs/application.json
    HWCFG: tools/scripts/nsdk_cli/configs/gd32vf103v_eval.json
    LOGDIR: logs/gd32vf103v_eval
  script:
    - python3 tools/scripts/nsdk_cli/nsdk_bench.py --appcfg $APPCFG --hwcfg $HWCFG --parallel="-j" --logdir $LOGDIR

sdk_build_job_gd32vf103v_rvstar:
  <<: *build_job_template_default
  variables:
    APPCFG: tools/scripts/nsdk_cli/configs/application.json
    HWCFG: tools/scripts/nsdk_cli/configs/gd32vf103v_rvstar.json
    LOGDIR: logs/gd32vf103v_rvstar
  script:
    - python3 tools/scripts/nsdk_cli/nsdk_bench.py --appcfg $APPCFG --hwcfg $HWCFG --parallel="-j" --logdir $LOGDIR

sdk_build_job_nuclei_fpga_eval:
  <<: *build_job_template_default
  variables:
    APPCFG: tools/scripts/nsdk_cli/configs/application.json
    HWCFG: tools/scripts/nsdk_cli/configs/nuclei_fpga_eval_ci.json
    LOGDIR: logs/nuclei_fpga_eval_ci
  script:
    - python3 tools/scripts/nsdk_cli/nsdk_bench.py --appcfg $APPCFG --hwcfg $HWCFG --parallel="-j" --logdir $LOGDIR
