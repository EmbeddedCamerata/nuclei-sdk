## Package Base Information
name: ssp-nsdk_gd32vf103
owner: nuclei
description: GD32VF103 SoC Support Package
type: ssp
keywords:
  - soc
  - risc-v
  - nuclei
license: Apache-2.0
homepage: https://rvmcu.com/site/gd32vf103/

packinfo:
  core_vendor: Nuclei
  vendor: GigaDevice
  name: GD32VF103
  doc:
    website: https://www.gigadevice.com/products/microcontrollers/gd32/risc-v/mainstream-line/gd32vf103-series/ # Website
    datasheet: http://www.gd32mcu.com/en/download/0?kw=GD32VF1 # SoC datasheet
    usermanual: http://www.gd32mcu.com/en/download/0?kw=GD32VF1 # User Manual
    extra:

## Package Dependency
dependencies:
  - name: csp-nsdk_nmsis
    version:

## Package Configurations
configuration:
  gd32vf103_usb:
    default_value: 0
    global: true
    type: checkbox
    description: USB Driver Present
  nuclei_core:
    default_value: n205
    type: choice
    global: true
    description: Nuclei RISC-V Core
    choices:
      - name: n205
        arch: rv32imac
        abi: ilp32
        description: N205/Bumblebee Core(ARCH=rv32imac, ABI=ilp32)
  stdclib:
    default_value: newlib_nano
    type: choice
    global: true
    description: Standard C Library
    choices:
      - name: newlib_full
        description: newlib with full feature
      - name: newlib_fast
        description: newlib nano with printf/scanf float
      - name: newlib_small
        description: newlib nano with printf float
      - name: newlib_nano
        description: newlib nano without printf/scanf float
      - name: libncrt_fast
        description: nuclei c runtime library, optimized for speed
      - name: libncrt_balanced
        description: nuclei c runtime library, balanced, full feature
      - name: libncrt_small
        description: nuclei c runtime library, optimized for size, full feature
      - name: libncrt_nano
        description: nuclei c runtime library, optimized for size, no float support
      - name: libncrt_pico
        description: nuclei c runtime library, optimized for size, no long/long long support

## Source Code Management
codemanage:
  installdir: gd32vf103
  copyfiles:
    - path: ["Source/*.c", "Source/Drivers/*.c", "Source/GCC/", "Include/*.h", "gd32vf103.svd"]
    - path: ["Source/Stubs/newlib"]
      condition: $( startswith(${stdclib}, "newlib") )
    - path: ["Source/Stubs/libncrt"]
      condition: $( startswith(${stdclib}, "libncrt") )
    - path: ["Source/Drivers/Usb/*.c", "Include/Usb/*.h"]
      condition: $( ${gd32vf103_usb} == 1 )
  incdirs:
    - path: ["Include"]
    - path: ["Include/Usb/"]
      condition: $( ${gd32vf103_usb} == 1 )

## Set Configuration for other packages
setconfig:
  - config: nmsislibarch
    value: ${nuclei_core.arch}

## Debug Configuration for this SoC
debugconfig:
  - type: openocd
    description: Nuclei OpenOCD
    svd: gd32vf103.svd

  - type: qemu
    description: Nuclei QEMU
    svd: gd32vf103.svd

## Build Configuration
buildconfig:
  - type: gcc
    description: Nuclei RISC-V GNU Toolchain #must
    cross_prefix: riscv-nuclei-elf- # optional
    common_flags: # flags need to be combined together across all packages
      - flags: -g -fno-common -ffunction-sections -fdata-sections
      - flags: -march=${nuclei_core.arch} -mabi=${nuclei_core.abi} -mcmodel=medany
      - flags: --specs=nosys.specs
        condition: $( ${stdclib} == "newlib_full" )
      - flags: --specs=nano.specs --specs=nosys.specs -u _printf_float -u _scanf_float
        condition: $( ${stdclib} == "newlib_fast" )
      - flags: --specs=nano.specs --specs=nosys.specs -u _printf_float
        condition: $( ${stdclib} == "newlib_small" )
      - flags: --specs=nano.specs --specs=nosys.specs
        condition: $( ${stdclib} == "newlib_nano" )
      - flags: --specs=${stdclib}.specs
        condition: $( startswith(${stdclib}, "libncrt") )
    ldflags:
      - flags: -lstdc++ -nostartfiles --specs=nosys.specs
      - flags: -Wl,--gc-sections -Wl,--check-sections
      - flags: -u _isatty -u _write -u _sbrk -u _read -u _close -u _fstat -u _lseek
        condition: $( startswith(${stdclib}, "newlib") )
    cflags:
    asmflags:
      - flags: -x assembler-with-cpp
    cxxflags:
    common_defines:
      - defines:
    prebuild_steps: # could be override by app/bsp type
      command:
      description:
    postbuild_steps: # could be override by app/bsp type
      command:
      description:
